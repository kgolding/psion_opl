REM AppFrame for the Psion 5, by K.Golding (C) 1999
REM Version dated 16/4/2000

#define expire_year 2001
#define expire_month 6
#define version "0.92b"

INCLUDE "Const.oph"
INCLUDE "System.oxh"
INCLUDE "Printer.oxh"
	
CONST KUidAppFrame& = &100041BB
CONST KAppName$ = "MMargin"			REM Stick to one word upto 8 chars
CONST Kzoommax% = 4							REM Maximum levels of zoom
CONST KcmdN$ = "emtcqk"					REM Commands Exit/Zoom/Toolbar/Calculate/Quick Calc/Prefs
CONST KcmdS$ = "amh"						REM Commands About/Zoom/Help

CONST Kcopyright$ = "� K.Golding 1999-2000"
	
APP MMargin, KUidAppFrame&
	ICON "MMargin.mbm"
	ICON "MMargin.mbm"
ENDA
	
PROC Start:
	DEFAULTWIN 1								REM Set default window to 4 colour mode
	gIPRINT "Loading " + KAppName$ + " - " + version
	LOADM "Z:\System\OPL\Toolbar.opo"
	tBarLink:("Main")
ENDP
	
PROC Main:
	GLOBAL ev&(16), minit%			REM Current event, last menu item selected
	GLOBAL redraw%							REM Set to false to prevent screen redraws whilst init.
	GLOBAL cmdN$(26), cmdS$(26)	REM command keys allowed
	GLOBAL fullscreenwidth%			REM Static, machines default width
	GLOBAL fullscreenheight%		REM Static, machines default height
	GLOBAL maxwidth%						REM maximum width after toolbar
	GLOBAL exit%								REM Set True to exit program
	GLOBAL zoomlevel%						REM Current zoom level (1 to Kzoommax%)
	GLOBAL zoomfont&(Kzoommax%)	REM Zoom font ID
	GLOBAL fontheight%					REM Height of current zoom font
	GLOBAL fontdescent%					REM Descent of current zoom font

	#INCLUDE "../LeaseCalc/Globals.opp"
	
	GLOBAL blank&
	GLOBAL equip, hours&, margin, visits%, labourrate, addcosts
	GLOBAL labourcost, basecost, quotedprice, basicmaint, compmaint
	GLOBAL term%
	GLOBAL top%, left%, height%, width%, step%, maxfontdescent%

	fullscreenwidth% = gWIDTH
	fullscreenheight% = gHEIGHT
		
	checkdate:
		
	Initialize:												REM Setup defaults, read ini settings & draw screen
	
	SystemEvent:(CMD$(3) + CMD$(2))		REM Deal with init system event
	DoSetCmd:													REM Set up available user commands
		
	AppRun:														REM Call event handling loop
	
	WriteIniFile:											REM Save ini file settings
ENDP
	
PROC DrawScreen:
	LOCAL background%
	LOCAL dummy%(6)
	
	IF NOT redraw% :RETURN :ENDIF
	gUSE 1														REM Use default screen
	gUPDATE OFF

	gSETWIN 0, 0, MaxWidth%, fullscreenheight%
	
	gCLS

	background% = gLOADBIT("z:\system\data\eikon.mbm", 0, 0)
	gUSE 1
	
	gPATT background%, gWidth, gHeight, 3
	gBOX gWIDTH, gHEIGHT
	
	left% = (gWidth - width%) / 2
	
	gAt left%, top%
	gFill width%, height% + 2, 1
	gBox width%, height% + 2
	
	gStyle 0
	gAt left% + 5, top% + step% - maxfontdescent%
	gPrintB "Equipment Cost:", width% - 10, 2

	gMove 0, step%		
	gPrintB "Labour Cost:", width% - 10, 2

	gStyle 1
	gMove 0, step%
	gPrintB "Base Price:", width% - 10, 2

	gMove 0, step%
	gPrintB "Margin:", width% - 10, 2

	gMove 0, step%	
	gStyle 0
	gPrintB "Additional Costs:", width% - 10, 2
	gMove 0, step%
	
	gStyle 1
	gPrintB "Quoted price:", width% - 10, 2
	gMove 0, step%
	
	gStyle 0
	gPrintB "Basic rental p/a:", width% - 10, 2
	gMove 0, step%
	
	gStyle 1
	gPrintB "Comprehensive rental p/a:", width% - 10, 2
	
	gMove 0, step%
	gPrintB "Lease rental (inc maint):", width% - 10, 2
	gStyle 0
	
	gAT 5,	15
	gFONT 268435953
	gPRINT "Margin/Maintenace/Lease Calculator for CCTV and Access Control"
	
	gAT gWIDTH - gTWIDTH(Kcopyright$) - 5, gHeight - 5
	gPRINT Kcopyright$
	
	gFONT zoomfont&(zoomlevel%)		rem Reset Fonts

	UpdateToolBar:
	UpdateScreen:
	gUPDATE ON

	gCLOSE background%

ENDP
	
PROC UpdateScreen:
	gUSE 1														REM Use default screen
	
	labourcost = labourrate * hours&
	basecost = equip + labourcost
	quotedprice = addcosts + ApplyMargin:(basecost, margin)
	basicmaint = (((equip * 1.15) + (17.5 * hours&) + 400) / 10) + (visits% * 80)
	compmaint = basicmaint * 1.1
	
	gStyle 0
	gAt left% + width% - 270 - 10, top% + step% - maxfontdescent%
	gPrintB "�" + Fix$(equip, 2, 8), 270, 1

	gMove 0, step%
	gPrintB Gen$(hours&, 8) + "hrs @ �" + Fix$(labourrate, 2, 8) + " = �" + Fix$(labourcost, 2, 10), 270, 1

	gStyle 1
	gMove 0, step%
	gPrintB "�" + Fix$(basecost, 2, 14), 270, 1

	gMove 0, step%
	gPrintB Gen$(Margin, 2) + "%", 270, 1

	gMove 0, step%	
	gStyle 0
	gPrintB "�" + Fix$(addcosts, 2, 10), 270, 1
	
	gStyle 1
	gMove 0, step%
	gPrintB "�" + Fix$(quotedprice, 2, 14), 270, 1
	gMove 0, step%
	
	gStyle 0
	gPrintB "�" + Fix$(basicmaint, 2, 10), 270, 1
	gMove 0, step%
	
	gStyle 1
	gPrintB "�" + Fix$(compmaint, 2, 10), 270, 1

	gMove 0, step%
	IF quotedprice > lrRateAmountMin(1)
		gStyle 1
		gPrintB lrTerm$(term%) + " p/qtr �" + Fix$(lrQtrPayment:(term%, quotedprice, compmaint), 2, 14), 270, 1
	ELSE
		gStyle 0
		gPrintB "Too low in value for lease option", 270, 1
	ENDIF

	gStyle 0
ENDP
	
PROC UpdateToolBar:
	tBarSetTitle:(KAppName$)
ENDP
	
PROC CmdE%:										REM File/Exit %e
	exit% = KTrue%
ENDP
	
PROC CmdN%:										REM File/New %n
ENDP
	
PROC CmdO%:										REM File/Open %o
ENDP
	
PROC CmdSC%:									REM File/Close %C
ENDP
	
PROC CmdSG%:									REM Save as %G
ENDP
	
PROC CmdS%:										REM Save %s
ENDP
	
PROC CmdR%:										REM Revert to saved %r
ENDP
	
PROC CmdK%:										REM Special/Prefernces
	dINIT "Preferences"
	dFloat labourrate, "Labour rate p/h �", 1, 999
	IF DIALOG
		UpdateScreen:
	ENDIF
ENDP

PROC CmdSH%:									REM Mini Help
	dINIT KappName$ + " - Help", 8
	dTEXT "", "Press either of the 'Calculate' buttons on the toolbar"
	dTEXT "", "(or the hotkeys Ctrl-Q and Ctrl-C), then enter the"
	dTEXT "", "information requested and press [Enter] to update"
	dTEXT "", "the screen display."
	dBUTTONS "OK", 13
	DIALOG
ENDP

PROC CmdSA%:									REM Special/About %A
	dINIT "About " + KAppName$ + " - " + version, 8
	dTEXT "", Kcopyright$ + " - kgolding@cix.co.uk", 2
	dTEXT "", " "
	dTEXT "", "Whilst the quoted price will always be correct"
	dTEXT "", "given the margin and base cost, The maintenance"
	dTEXT "", "costs should only be used as guide and should"
	dTEXT "", "be checked as required by your sales manager."
	dBUTTONS "OK", 13
	DIALOG
ENDP

PROC CmdX%:										REM Edit/Cut %x
ENDP

PROC CmdQ%:										REM Quick Calculate
	Local base, mymargin
	LOCAL ret%, showresult%
	
	showresult% = 0
	base = basecost
	mymargin = margin
	
	DO
		dInit "Quick Calculate"
		IF showresult%
			dTEXT "Base cost", "�" + FIX$(base, 2, 12)
			dTEXT "Margin", GEN$(mymargin, 5) + "%"
			dTEXT "Sell price", "�" + FIX$(ApplyMargin:(base, mymargin), 2, 14)
			dTEXT "", "", $800
			gIPRINT "Don't forget to add addition costs such as a NACOSS certificate"
		ENDIF
		dFloat mymargin, "Margin %", 0, 99
		dFloat base, "Base cost �", 0, 99999.99
		dBUTTONS "Calculate", 13, "Cancel", -27, "Exit", %e
		ret% = DIALOG
		IF ret% = 13
			showresult% = -1
			CONTINUE
		ELSEIF ret% = %e
			exit% = -1
		ENDIF
		BREAK
	UNTIL 0
	
ENDP

PROC CmdC%:										REM Full Calculate
	LOCAL ret%
	
	dInit "Calculate"
	dFloat equip, "Equipment cost �", 0, 99999.99
	dLong hours&, "Labour hours", 0, 9999
	dFloat margin, "Margin %", 0, 99
	dFloat addcosts, "Addition costs �", 0, 9999
	dChoice visits%, "Visits per year", "1,2,3,4"
	dChoice term%, "Lease term", lrTermChoice$:
	dBUTTONS "Calculate", 13, "Cancel", -27, "Exit", %e
	ret% = DIALOG
	IF ret% = 13
		UpdateScreen:
	ELSEIF ret% = %e
		exit% = -1
	ENDIF
	
ENDP

PROC ApplyMargin:(cost, marg)
	RETURN cost * (1+(marg/100)/(1-(marg/100)))
ENDP

PROC CmdV%:										REM Edit/Paste %v
ENDP
	
PROC CmdM%:										REM Zoom in %m
	Zoom:(1)
ENDP
	
PROC CmdSM%:									REM Zoom out %M
	Zoom:(-1)
ENDP
	
PROC CmdT%:										REM Toolbar on/off %t
	IF tbVis%
		tBarHide:
		maxwidth% = fullscreenwidth%
	ELSE
		tBarShow:
		maxwidth% = fullscreenwidth% - tbWidth%
	ENDIF
	DrawScreen:
ENDP

PROC DoSetCmd:								REM Set up user commands
REM This is called at the start of the program, after each call to
REM a "Cmd" procedure, and whenever the data file changes
	cmdN$ = KcmdN$							REM Enable standard commands
	cmdS$ = KcmdS$
ENDP
	
PROC DoMenu:									REM Display users Menu
	mINIT
	mCARD "MMargin", "Quick Calculate...", %q, "Full Calculate...", -%c, "Help...", %H, "About...", -%A, "Close", %e
	mCARD "View", "Preferences", -%k, "Zoom in", %m, "Zoom out", -%M, "Toobar", %t OR tbMenuSym%
	DoCommandKey:(MENU(minit%))
ENDP
	
PROC KeyPressed:(k%, shift%)	REM Deal with direct (non ctrl) keys
	IF k% = %q
		DoCommandKey:(%q)
	ELSEIF k% = %c
		DoCommandKey:(%c)
	ENDIF
ENDP
	
PROC PenDown:(wid%, x%, y%)		REM Pen Down
ENDP
	
PROC PenUp:(wid%, x%, y%)			REM Pen Up
ENDP
	
PROC PenDrag:(wid%, x%, y%)		REM Pen Dragged
ENDP
	
PROC AppGotFocus:							REM Application has got focus
ENDP
	
PROC AppLostFocus:						REM Application has lost focus
ENDP
	
PROC MachineOn:								REM Machine turned on
ENDP
	
PROC DoCutCopyPaste:					REM Sidebar menu cut/copy/paste
	LOCAL ret%
	ret% = mPOPUP(5, 40, 0, "Cut", m%:(%x), "Copy", m%:(%c), "Paste", m%:(%v))
	IF ret% <> 0
		DoCommandKey:(ret%)
	ENDIF
ENDP
	
PROC DoIRTxRx:								REM Sidebar menu infrared send/receive
	LOCAL ret%
	REM Take out the "+ $1000" to enable send/receive
	ret% = mPOPUP(5, 90, 0, "Infrared send", 1 + $1000, "Infrared receive", 2 + $1000)
	IF ret% = 1
		REM Do Infrared Send
	ELSEIF ret% = 2
		REM Do Infrared Recieve
	ENDIF
ENDP
	
PROC Zoom:(by%)								REM Zoom in/out
	LOCAL i&(48)
	
	zoomlevel% = zoomlevel% + by%
	IF zoomlevel% < 1
		zoomlevel% = 1
	ELSEIF zoomlevel% > Kzoommax%
		zoomlevel% = Kzoommax%
	ENDIF
	gFONT zoomfont&(zoomlevel%)
	gINFO32 i&()
	fontheight% = i&(3) + i&(4)		REM Set global total height off font
	fontdescent% = i&(4)					REM Set global descent off font
	DrawScreen:
ENDP
	
	
PROC ReadIniFile:								REM Get ini file settings
	LOCAL name$(255), off%(6)
	name$ = PARSE$(".ini", CMD$(1), off%())
	ONERR ErrReadIniFile
	OPEN """" + name$ + """", I, lastusedfile$, zoomlevel%, tbVis%, equip, hours&, margin, visits%, labourrate, addcosts, term%
	zoomlevel% = I.zoomlevel%
	tbVis% = I.tbVis%
	equip = I.equip
	hours& = I.hours&
	margin = I.margin
	visits% = I.visits%
	labourrate = I.labourrate
	addcosts = I.addcosts
	term% = I.term%
	CLOSE
ErrReadIniFile::
	REM Ignore error and don't use ini file settings!
	ONERR OFF
ENDP
	
PROC WriteIniFile:							REM Save ini file settings
	LOCAL name$(255), off%(6)
	
	name$ = PARSE$(".ini", CMD$(1), off%())
	TRAP DELETE name$
	CREATE """" + name$ + """", I, lastusedfile$, zoomlevel%, tbVis%, equip, hours&, margin, visits%, labourrate, addcosts, term%
	INSERT
	I.zoomlevel% = zoomlevel%
	I.tbVis% = tbVis%
	I.equip = equip
	I.hours& = hours&
	I.margin = margin
	I.visits% = visits%
	I.labourrate = labourrate
	I.addcosts = addcosts
	I.term% = term%
	PUT
	CLOSE
ENDP
	
PROC SystemEvent:(s$)						REM Deal with system event
	LOCAL a$(1)
	a$ = LEFT$(s$, 1)
	IF a$ = "X"
		exit% = KTrue%
	ENDIF
ENDP
	
PROC AppRun:											REM The main event handling loop
	LOCAL k%, shift%
	LOCAL w%, x%, y%
	
	DO
		LOCK OFF
		GETEVENT32 ev&()
		IF (ev&(1) = $406) OR (ev&(1) = $407) OR (ev&(1) = $409) OR (ev&(1) = $40A)
			REM Throw away keydown & keyup, pen enter/exit contact
			CONTINUE
		ENDIF
		LOCK  ON
		IF (ev&(1) AND $400) = 0			REM Keyboard event
			k% = ev&(1)
			shift% = (ev&(4) AND 2)
			IF k% = KKeyMenu%
				DoMenu:
			ELSEIF (ev&(4) AND 4) = 4		REM Ctrl key
				DoCommandKey:(96 + k% - shift% * 16)
			ELSE												REM Normal key
				KeyPressed:(k%, shift%)
			ENDIF
		ELSEIF ev&(1) = $408					REM Pen event
			IF tBarOffer%:(ev&(3), ev&(4), ev&(6), ev&(7))
				DoSetCmd:
				CONTINUE
			ELSE
				w% = ev&(3)
				x% = ev&(6)
				y% = ev&(7)
				IF ev&(4) = 0							REM Pen Down
					PenDown:(w%, x%, y%)
				ELSEIF ev&(4) = 1					REM Pen Up
					PenUp:(w%, x%, y%)
				ELSEIF ev&(4) = 6					REM Pen Dragged
					PenDrag:(w%, x%, y%)
				ENDIF
			ENDIF
		ELSEIF ev&(1) = 10000					REM SidebarMenu
			DoMenu:
		ELSEIF ev&(1) = 10001					REM Cut/Copy/Paste
			DoCutCopyPaste:
		ELSEIF ev&(1) = 10002					REM IR Rx/Tx
			DoIRTxRx:
		ELSEIF ev&(1) = 10003					REM Zoom out
			CmdM%:
		ELSEIF ev&(1) = 10004					REM Zoom in
			CmdSM%:
		ELSEIF ev&(1) = $401					REM App got focus
			AppGotFocus:
		ELSEIF ev&(1) = $402					REM App lost focus
			AppLostFocus:
		ELSEIF ev&(1) = $403					REM Machine switched on
			MachineOn:
		ELSEIF ev&(1) = $404					REM System event
			SystemEvent:(GETCMD$)
		ELSE 													REM Unknown event
			gIPRINT "Unknown event " + GEN$(ev&(1), 8) + ", " + GEN$(ev&(2), 8) + ", " + GEN$(ev&(3), 8)
		ENDIF
	UNTIL exit%
ENDP
	
PROC DoCommandKey:(k%)						REM Calls PROC's as required
	LOCAL k$(1)
	
	k$ = CHR$(k%)
	IF k$ > "Z"
		IF LOC(cmdN$, k$)
			@%("Cmd" + k$):
			DoSetCmd:
		ENDIF
	ELSE
		IF LOC(cmdS$, k$)
			@%("CmdS" + k$):
			DoSetCmd:
		ENDIF
	ENDIF
ENDP
	
PROC NotAllowed%:(k%)						REM Returns true if command allowed
	IF ((k% <= ASC("Z")) AND LOC(cmdS$, CHR$(k%))) OR ((k% >= ASC("a")) AND LOC(cmdN$, CHR$(k%)))
		RETURN KFalse%
	ELSE
		gIPRINT "This item is not available", KBusyTopRight%
		RETURN KTrue%
	ENDIF
ENDP
	
PROC m%:(k%)										REM Returns menu item dimmed if applicable
	IF ((k% <= ASC("Z")) AND LOC(cmdS$, CHR$(k%))) OR ((k% >= ASC("a")) AND LOC(cmdN$, CHR$(k%)))
		RETURN k%
	ELSE
		RETURN k% OR $1000
	ENDIF
ENDP
	
PROC Initialize:
	SETCOMPUTEMODE:(KComputeModeOff&)	REM Give me speed, I'm a good program
	SETFLAGS &010001									REM Enable machiine on events & auto compact of db
	redraw% = KFalse%									REM Switch off screen drawing whilst init.
	fullscreenwidth% = gWIDTH					REM Before default window changes
	fullscreenheight% = gHEIGHT				REM As above
	zoomfont&(1) = KFontArialNormal8&	REM Zoom font sizes
	zoomfont&(2) = KFontArialNormal11&
	zoomfont&(3) = KFontArialNormal13&
	zoomfont&(4) = KFontArialNormal15&
rem	zoomfont&(5) = KFontArialNormal18&

	blank& = gCreateBit(5,5)
	gUse 1
	
	tBarInit:(KAppName$, gWIDTH, gHEIGHT)
	tBarButt:("q", 1, "Quick" + CHR$(10) + "Calculate", 0, blank&, blank&, 0)
	tBarButt:("c", 2, "Full" + CHR$(10) + "Calculate", 0, blank&, blank&, 0)
	tBarButt:("A", 3, "About", 0, blank&, blank&, 0)
	tBarButt:("e", 4, "Exit", 0, blank&, blank&, 0)
	
	lrInit:
	
	rem Setup screen
	Zoom:(5) rem zoom to max
	step% = fontheight%
	maxfontdescent% = fontdescent%
	width% = fullscreenwidth% - 30 - 50
	height% = (step% * 9)
	top% = (gHeight - height%) / 2
	
	tbVis% = -1
	zoomlevel% = 3										REM Set zoom to middle

	rem Defaults
	equip = 100
	hours& = 16
	margin = 35
	labourrate = 24
	addcosts = 15
	visits% = 2
	term% = 2
	
	ReadIniFile:											REM Get ini file settings
	
	tbVis% = NOT tbVis%								REM Update toolbar
	CmdT%:
	
	redraw% = KTrue%
	Zoom:(0)													REM Set font for zoom level	& draw screen
ENDP
	
PROC Check%:(option%, flag%)				REM Returns true if option contains flag
	RETURN (option% OR flag%) = flag%
ENDP
	
PROC checkdate:
	if year >= expire_year
		if month >= expire_month
			alert("This software has expired", "Contact kgolding@cix.co.uk for a newer version", "Exit")
			STOP
		endif
	endif
	gIPRINT "This software expires on the 1/" + GEN$(expire_month, 2) + "/" + GEN$(expire_year, 4), 2
ENDP

#INCLUDE "../LeaseCalc/Lease_mod.opp"
